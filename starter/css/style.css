/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box; /*gets rid of pre-defined margin and padding in box model*/
}

body {
	/*universal font properties go in body because they are inherited to child elements*/
	font-family: "Lato", sans-serif;
	font-weight: 400;
	font-size: 16px;
	line-height: 1.7;
	color: #777;
	padding: 30px;
}

.logo-box {
	position: absolute; /* when using absolute, position is dependent on parent. In this case, header. Parent must be set to relative*/
	top: 40px;
	left: 40px;
}

.logo {
	height: 35px;
}

.header {
	height: 95vh;
	background-image: linear-gradient(
			to right bottom,
			rgba(126, 213, 111, 0.8),
			rgba(40, 180, 131, 0.8)
		),
		url(../img/hero.jpg);
	background-size: cover; /*takes an image and makes it fit in viewport*/
	background-position: top; /*makes bg stick to top of viewport, will adjust as viewport changes*/

	/*clip-path is how you basically cut a chunk out of an image using CSS*/
	/* It uses coordinates of the 4 corners x y and chops the image to those specifications */
	/* NOT SUPPORTED IN OLDER BROWSERS LIKE IE */

	/* ************************************** */
	/* TEMPLATE SHAPES FOR CLIPS. GOOD RESOURCE */
	/* https://bennettfeely.com/clippy/ */
	/* ************************************** */
	clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

	position: relative; /*Allows us to position the logobox where we want within header*/
}

.heading-primary {
	color: #fff;
	text-transform: uppercase;

	backface-visibility: hidden;
	margin-bottom: 60px;
}
.heading-primary-main {
	display: block;
	font-size: 60px;
	font-weight: 400;
	letter-spacing: 35px;

	animation-name: moveInLeft;
	animation-duration: 1s;
	animation-timing-function: ease-out;

	/* animation-delay: 3s; 
       animation-iteration-count: infinite;*/
}
.heading-primary-sub {
	display: block;
	font-size: 20px;
	font-weight: 700;
	letter-spacing: 17.4px;
	animation: moveInRight 1s ease-out;
}

.text-box {
	position: absolute;
	top: 40%;
	left: 50%;
	transform: translate(-50%, -50%);
	text-align: center;
}

@keyframes moveInLeft {
	0% {
		opacity: 0;
		transform: translateX(-100px);
	}

	80% {
		transform: translateX(10px);
	}

	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

@keyframes moveInRight {
	0% {
		opacity: 0;
		transform: translateX(100px);
	}

	80% {
		transform: translateX(-10px);
	}

	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

@keyframes moveInBottom {
	0% {
		opacity: 0;
		transform: translateY(100px);
	}

	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

/*link pseudoclass let you style an unvisited link*/
.btn:link,
.btn:visited {
	text-transform: uppercase;
	text-decoration: none;
	padding: 15px 40px; /*if you supply 2 values, first = top and bottom
    second = left and right. if you want different on all four it you need
    4 values and it goes top right bottom left - clockwise*/

	display: inline-block; /* inline block treats the element as text so you can center it using 
    text-align: center; IN THE PARENT ELEMENT */
	border-radius: 100px;
	transition: all 0.2s;
	position: relative;
}

.btn:hover {
	transform: translateY(-3px);
	box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
	transform: translate(-1px);
	box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
	background-color: #fff;
	color: #777;
}

.btn::after {
	content: "";
	display: inline-block;
	height: 100%;
	width: 100%;
	border-radius: 30px;
	position: absolute;
	top: 0;
	left: 0;
	z-index: -1;
	transition: all 0.4s;
}

.btn-white::after {
	background-color: #fff;
}

.btn:hover::after {
	transform: scaleX(1.4) scaleY(1.6);
	opacity: 0;
}

.btn-animated {
	animation: moveInBottom 0.5s ease-out 0.75s;
    animation-fill-mode: backwards;
}
